-- Drop tables if they exist (for development/testing)
DROP TABLE IF EXISTS user_activity_logs;
DROP TABLE IF EXISTS user_connections;
DROP TABLE IF EXISTS reward_users;
DROP TABLE IF EXISTS task_completions;
DROP TABLE IF EXISTS quest_groups;
DROP TABLE IF EXISTS group_users;
DROP TABLE IF EXISTS user_quests;
DROP TABLE IF EXISTS rewards;
DROP TABLE IF EXISTS tasks;
DROP TABLE IF EXISTS quests;
DROP TABLE IF EXISTS groups;
DROP TABLE IF EXISTS users;

-- Users table
CREATE TABLE IF NOT EXISTS users (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     username VARCHAR(255) NOT NULL,
                                     email VARCHAR(255) NOT NULL UNIQUE,
                                     password VARCHAR(255) NOT NULL,
                                     profile_picture_url TEXT,
                                     bio TEXT,
                                     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Groups table
CREATE TABLE IF NOT EXISTS groups (
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      name VARCHAR(255) NOT NULL,
                                      description TEXT,
                                      type VARCHAR(50),
                                      privacy_setting VARCHAR(50),
                                      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                      creator_id BIGINT,
                                      FOREIGN KEY (creator_id) REFERENCES users(id)
);

-- Quests table
CREATE TABLE IF NOT EXISTS quests (
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      title VARCHAR(255) NOT NULL,
                                      description TEXT,
                                      type VARCHAR(50), -- CHALLENGE, QUIZ, ACTIVITY_PARTNER, etc.
                                      visibility VARCHAR(50), -- PUBLIC, PRIVATE, GROUP_ONLY
                                      status VARCHAR(50), -- OPEN, IN_PROGRESS, COMPLETED, CANCELLED
                                      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                      creator_id BIGINT,
                                      FOREIGN KEY (creator_id) REFERENCES users(id)
);

-- Tasks table
CREATE TABLE IF NOT EXISTS tasks (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     title VARCHAR(255) NOT NULL,
                                     description TEXT,
                                     type VARCHAR(50), -- DAILY, ONE_TIME, RECURRING, etc.
                                     status VARCHAR(50), -- NOT_STARTED, IN_PROGRESS, COMPLETED, VERIFIED, FAILED
                                     verification_method VARCHAR(50), -- MANUAL, FITNESS_API, PHOTO, QUIZ, etc.
                                     start_date TIMESTAMP,
                                     end_date TIMESTAMP,
                                     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                     updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                     quest_id BIGINT,
                                     assigned_to BIGINT,
                                     FOREIGN KEY (quest_id) REFERENCES quests(id),
                                     FOREIGN KEY (assigned_to) REFERENCES users(id)
);

-- Task Completions table
CREATE TABLE IF NOT EXISTS task_completions (
                                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                task_id BIGINT,
                                                user_id BIGINT,
                                                status VARCHAR(50), -- SUBMITTED, VERIFIED, REJECTED
                                                completion_date TIMESTAMP,
                                                verification_date TIMESTAMP,
                                                verification_proof TEXT, -- URL or metadata
                                                notes TEXT,
                                                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                FOREIGN KEY (task_id) REFERENCES tasks(id),
                                                FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Rewards table
CREATE TABLE IF NOT EXISTS rewards (
                                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       description TEXT,
                                       type VARCHAR(50), -- MONETARY, POINTS, BADGE, CUSTOM
                                       monetary_value DECIMAL(10,2),
                                       currency VARCHAR(10),
                                       reward_source VARCHAR(50), -- INDIVIDUAL, GROUP, SYSTEM
                                       quest_id BIGINT,
                                       created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                       FOREIGN KEY (quest_id) REFERENCES quests(id)
);

-- User-Quest relationship (many-to-many)
CREATE TABLE IF NOT EXISTS user_quests (
                                           user_id BIGINT,
                                           quest_id BIGINT,
                                           join_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                           status VARCHAR(50), -- ACTIVE, COMPLETED, ABANDONED
                                           PRIMARY KEY (user_id, quest_id),
                                           FOREIGN KEY (user_id) REFERENCES users(id),
                                           FOREIGN KEY (quest_id) REFERENCES quests(id)
);

-- Group-User relationship (many-to-many)
CREATE TABLE IF NOT EXISTS group_users (
                                           group_id BIGINT,
                                           user_id BIGINT,
                                           role VARCHAR(50), -- ADMIN, MEMBER, MODERATOR
                                           join_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                           PRIMARY KEY (group_id, user_id),
                                           FOREIGN KEY (group_id) REFERENCES groups(id),
                                           FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Quest-Group relationship (many-to-many)
CREATE TABLE IF NOT EXISTS quest_groups (
                                            quest_id BIGINT,
                                            group_id BIGINT,
                                            PRIMARY KEY (quest_id, group_id),
                                            FOREIGN KEY (quest_id) REFERENCES quests(id),
                                            FOREIGN KEY (group_id) REFERENCES groups(id)
);

-- Reward-User relationship (many-to-many)
CREATE TABLE IF NOT EXISTS reward_users (
                                            reward_id BIGINT,
                                            user_id BIGINT,
                                            awarded_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                            PRIMARY KEY (reward_id, user_id),
                                            FOREIGN KEY (reward_id) REFERENCES rewards(id),
                                            FOREIGN KEY (user_id) REFERENCES users(id)
);

-- User Connections table (for finding other users)
CREATE TABLE IF NOT EXISTS user_connections (
                                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                user_id BIGINT,
                                                connected_user_id BIGINT,
                                                status VARCHAR(50), -- PENDING, ACCEPTED, REJECTED, BLOCKED
                                                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                FOREIGN KEY (user_id) REFERENCES users(id),
                                                FOREIGN KEY (connected_user_id) REFERENCES users(id)
);

-- User Activity Logs
CREATE TABLE IF NOT EXISTS user_activity_logs (
                                                  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                  user_id BIGINT,
                                                  activity_type VARCHAR(100),
                                                  description TEXT,
                                                  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                  FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Create indexes for better performance
CREATE INDEX idx_quests_creator ON quests(creator_id);
CREATE INDEX idx_tasks_quest ON tasks(quest_id);
CREATE INDEX idx_tasks_assigned_to ON tasks(assigned_to);
CREATE INDEX idx_rewards_quest ON rewards(quest_id);
CREATE INDEX idx_user_connections_user ON user_connections(user_id);
CREATE INDEX idx_user_connections_connected ON user_connections(connected_user_id);
CREATE INDEX idx_user_activity_logs_user ON user_activity_logs(user_id);