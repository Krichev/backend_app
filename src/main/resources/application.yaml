# Main Spring Boot Configuration
spring:
  application:
    name: challenger-app

  # Profile Configuration
  profiles:
    active: dev

  # Database Configuration (Default - Production)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/challenger_db}
    username: ${DATABASE_USERNAME:challenger_user}
    password: ${DATABASE_PASSWORD:challenger_password_secure_123}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
          fetch_size: 150
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    show-sql: false

  # Flyway Migration
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  # Web Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
      enabled: true

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

  # Security Configuration
  security:
    require-ssl: true

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

# Application Configuration
app:
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
    expiration: 86400000 # 24 hours
    refresh-expiration: 604800000 # 7 days
    header: Authorization
    token-prefix: "Bearer "

  # Storage Configuration
  storage:
    type: ${STORAGE_TYPE:s3} # local, s3
    s3:
      bucket-name: ${S3_BUCKET_NAME:challenger-app}
      region: ${S3_REGION:us-east-1}
      access-key: ${S3_ACCESS_KEY:challenger_minio}
      secret-key: ${S3_SECRET_KEY:challenger_secret_123}
      endpoint: ${S3_ENDPOINT:http://localhost:9000}

  # Metrics Configuration
  metrics:
    enabled: ${METRICS_ENABLED:true}

  # CORS Configuration
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  # Rate Limiting
  rate-limit:
    enabled: true
    requests-per-minute: 100
    requests-per-hour: 1000

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.my.challenger: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: INFO
    org.springframework.boot.autoconfigure: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30

# Springdoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
  show-actuator: false