# Application Configuration
spring:
  application:
    name: media-service

  # PostgreSQL Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/challenger_db}
    username: ${SPRING_DATASOURCE_USERNAME:challenger_user}
    password: ${SPRING_DATASOURCE_PASSWORD:challenger_password_secure_123}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

    # HikariCP Connection Pool Configuration
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 30000
      pool-name: ChallengerHikariPool
      max-lifetime: 2000000
      connection-timeout: 30000
      leak-detection-threshold: 60000

  # JPA/Hibernate Configuration
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
        jdbc:
          batch_size: 20
          fetch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false


  # File upload configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB

  # Async configuration
  task:
    execution:
      pool:
        core-size: 4
        max-size: 10
        queue-capacity: 100
      thread-name-prefix: async-

# Application-specific configuration
app:
  # Base URL for generating media URLs
  base-url: ${BASE_URL:http://localhost:8080}

  # Storage type: local or s3
  storage:
    type: ${STORAGE_TYPE:s3}  # Change to 'local' for local storage

  # Local upload directory (used when storage.type=local)
  upload:
    dir: ${UPLOAD_DIR:./uploads}
    max-file-size: 52428800     # 50MB
    max-video-size: 209715200   # 200MB
    max-audio-size: 52428800    # 50MB

  # S3 configuration (used when storage.type=s3)
  s3:
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}
    region: ${AWS_REGION:us-east-1}
    bucket-name: ${S3_BUCKET_NAME:my-media-bucket}
    endpoint: ${S3_ENDPOINT:}  # Optional: for LocalStack or custom S3
    cloudfront-domain: ${CLOUDFRONT_DOMAIN:}  # Optional: CloudFront distribution

  # FFmpeg configuration
  ffmpeg:
    path: ${FFMPEG_PATH:ffmpeg}

  ffprobe:
    path: ${FFPROBE_PATH:ffprobe}

# Logging configuration
logging:
  level:
    root: INFO
    com.my.challenger: DEBUG
    software.amazon.awssdk: INFO
    com.github.kokorin.jaffree: DEBUG

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

  file:
    name: logs/media-service.log
    max-size: 10MB
    max-history: 30

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

---
# Development profile
spring:
  config:
    activate:
      on-profile: dev

app:
  storage:
    type: local
  upload:
    dir: ./dev-uploads

logging:
  level:
    com.my.challenger: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    show-sql: false

app:
  storage:
    type: s3

logging:
  level:
    root: WARN
    com.my.challenger: INFO

---
# Test profile
#spring:
#  config:
#    activate:
#      on-profile: test
#
#  datasource:
#    url: jdbc:h2:mem:testdb
#    driver-class-name: org.h2.Driver
#
#app:
#  storage:
#    type: local
#  upload:
#    dir: ./test-uploads