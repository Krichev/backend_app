spring:
  application:
    name: challenger-app

  # PostgreSQL Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/challenger_db}
    username: ${SPRING_DATASOURCE_USERNAME:challenger_user}
    password: ${SPRING_DATASOURCE_PASSWORD:challenger_password_secure_123}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

    # HikariCP Connection Pool Configuration
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 30000
      pool-name: ChallengerHikariPool
      max-lifetime: 2000000
      connection-timeout: 30000
      leak-detection-threshold: 60000

  # JPA/Hibernate Configuration
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
        jdbc:
          batch_size: 20
          fetch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false

  # File upload configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-stacktrace: never
    include-message: always

# Logging Configuration
logging:
  level:
    root: INFO
    com.my.challenger: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Application specific configuration
app:
  # File upload configuration (local storage for now)
  upload:
    dir: uploads
    max-file-size: 52428800  # 50MB

  uploads:
    photo-verification-dir: uploads/verification-photos/

  # Storage configuration (local for now, can be changed to S3 later)
  storage:
    type: local

  # Challenge configuration
  challenge:
    max-participants: 100
    default-duration-days: 30

  # Quiz configuration
  quiz:
    default-question-count: 10
    time-limit-minutes: 30

# JWT Configuration (if using JWT authentication)
jwt:
  secret: ${JWT_SECRET:your-jwt-secret-key-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours

---
# Development profile
spring:
  config:
    activate:
      on-profile: development

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    com.my.challenger: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG

---
# Production profile
spring:
  config:
    activate:
      on-profile: production

  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false

logging:
  level:
    root: WARN
    com.my.challenger: INFO
    org.hibernate.SQL: WARN

server:
  error:
    include-stacktrace: never
    include-message: never

---
# Test profile
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop

  h2:
    console:
      enabled: true